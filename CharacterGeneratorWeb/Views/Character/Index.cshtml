@model IEnumerable<BusinessLogicLayer.CharacterBLL>

@{
    ViewBag.Title = "Characters";
    int PageNumber = ViewBag.PageNumber;
    int PageSize = ViewBag.PageSize;
    int TotalCharacterCount = ViewBag.TotalCharacterCount;
    int TotalPageButtonCount = 1 + TotalCharacterCount / PageSize;
    int CorrectedPageButtonCount = (TotalPageButtonCount > 9) ? 10 : TotalPageButtonCount;
}

<h2>Index</h2>
<div>
    Welcome
    <b>@HttpContext.Current.User.Identity.Name</b>   
</div>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

@{
    for (int i = 0; i < CorrectedPageButtonCount; i++)
    {
        string classstring = (i == PageNumber) ? "btn btn-sm btn-success glyphicon glyphicon-circle-arrow-down" : "btn btn-sm btn-normal glyphicon glyphicon-option-horizontal";
        @Html.ActionLink($"-Page {i}-", "Page", new { PageNumber = i, PageSize = PageSize }, new { @class = classstring });
    }
}
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.CharacterID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.UserID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CharacterName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ClassID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RaceID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.StrengthScore)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DexterityScore)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ConstitutionScore)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.IntelligenceScore)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.WisdomScore)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CharismaScore)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.UserName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ClassName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RaceName)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.CharacterID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UserID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CharacterName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ClassID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RaceID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StrengthScore)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DexterityScore)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ConstitutionScore)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IntelligenceScore)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.WisdomScore)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CharismaScore)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UserName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ClassName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RaceName)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new {  id=item.CharacterID }) |
                @Html.ActionLink("Details", "Details", new {  id=item.CharacterID }) |
                @Html.ActionLink("Delete", "Delete", new {  id=item.CharacterID })
            </td>
        </tr>
    }

</table>
