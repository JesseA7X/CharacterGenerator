@model CharacterGeneratorWeb.Models.CharacterGeneratorModel

@{
    ViewBag.Title = "gen2";
}

<h2>gen2</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>CharacterGeneratorModel</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <table>
        <tr>
            <td>
                <div class="form-group">
                    @Html.LabelFor(model => model.StrengthScore, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.StrengthScore, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.StrengthScore, "", new { @class = "text-danger" })
                    </div>
                </div>
            </td>


            <td>
                <div class="form-group">
                    @Html.LabelFor(model => model.ModStr, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ModStr, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ModStr, "", new { @class = "text-danger" })
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div class="form-group">
                    @Html.LabelFor(model => model.DexterityScore, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DexterityScore, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DexterityScore, "", new { @class = "text-danger" })
                    </div>
                </div>
            </td>
            <td>
                <div class="form-group">
                    @Html.LabelFor(model => model.ModDex, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ModDex, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ModDex, "", new { @class = "text-danger" })
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div class="form-group">
                    @Html.LabelFor(model => model.ConstitutionScore, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ConstitutionScore, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ConstitutionScore, "", new { @class = "text-danger" })
                    </div>
                </div>
            </td>
            <td>
                <div class="form-group">
                    @Html.LabelFor(model => model.ModCon, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ModCon, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ModCon, "", new { @class = "text-danger" })
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div class="form-group">
                    @Html.LabelFor(model => model.IntelligenceScore, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.IntelligenceScore, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.IntelligenceScore, "", new { @class = "text-danger" })
                    </div>
                </div>
            </td>
            <td>
                <div class="form-group">
                    @Html.LabelFor(model => model.ModInt, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ModInt, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ModInt, "", new { @class = "text-danger" })
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div class="form-group">
                    @Html.LabelFor(model => model.WisdomScore, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.WisdomScore, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.WisdomScore, "", new { @class = "text-danger" })
                    </div>
                </div>
            </td>
            <td>
                <div class="form-group">
                    @Html.LabelFor(model => model.ModWis, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ModWis, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ModWis, "", new { @class = "text-danger" })
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div class="form-group">
                    @Html.LabelFor(model => model.CharismaScore, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CharismaScore, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CharismaScore, "", new { @class = "text-danger" })
                    </div>
                </div>
            </td>
            <td>
                <div class="form-group">
                    @Html.LabelFor(model => model.ModCha, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ModCha, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ModCha, "", new { @class = "text-danger" })
                    </div>
                </div>
            </td>
        </tr>
    </table>

    <div class="form-group">
        @Html.LabelFor(model => model.RaceNames, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.RaceID,(IEnumerable<SelectListItem>)Model.RaceNames, new { htmlAttributes = new { @class = "form-control" } })
            
            @Html.ValidationMessageFor(model => model.RaceNames, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ClassNames, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.ClassID, (IEnumerable<SelectListItem>)Model.ClassNames, new { htmlAttributes = new { @class = "form-control" } })
            
            @Html.ValidationMessageFor(model => model.ClassNames, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ClassID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ClassID, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ClassID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RaceID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.RaceID, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.RaceID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
